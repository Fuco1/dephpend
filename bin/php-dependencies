#!/usr/bin/env php
<?php declare (strict_types = 1);

use Mihaeu\PhpDependencies\Analyser;
use Mihaeu\PhpDependencies\Cli\DsmCommand;
use Mihaeu\PhpDependencies\Cli\UmlCommand;
use Mihaeu\PhpDependencies\Cli\TextCommand;
use Mihaeu\PhpDependencies\DependencyInspectionVisitor;
use Mihaeu\PhpDependencies\Parser;
use Mihaeu\PhpDependencies\PhpFileFinder;
use Mihaeu\PhpDependencies\PlantUmlFormatter;
use Mihaeu\PhpDependencies\PlantUmlWrapper;
use Mihaeu\PhpDependencies\ShellWrapper;
use PhpParser\NodeTraverser;
use PhpParser\ParserFactory;
use Symfony\Component\Console\Application;

require __DIR__.'/../vendor/autoload.php';

ini_set('xdebug.max_nesting_level', '3000');
ini_set('memory_limit', '512M');

$application = new Application();
$application->setName(<<<EOT
      _      _____  _    _ _____               _ 
     | |    |  __ \| |  | |  __ \             | |
   __| | ___| |__) | |__| | |__) |__ _ __   __| |
  / _` |/ _ \  ___/|  __  |  ___/ _ \ '_ \ / _` |
 | (_| |  __/ |    | |  | | |  |  __/ | | | (_| |
  \__,_|\___|_|    |_|  |_|_|   \___|_| |_|\__,_|
EOT
);

$phpFileFinder = new PhpFileFinder();
$parser = new Parser((new ParserFactory())->create(ParserFactory::PREFER_PHP7));
$analyser = new Analyser(new NodeTraverser(), new DependencyInspectionVisitor());

$application->add(new UmlCommand(
    $phpFileFinder,
    $parser,
    $analyser,
    new PlantUmlWrapper(new PlantUmlFormatter(), new ShellWrapper())
));

$application->add(new DsmCommand(
    $phpFileFinder,
    $parser,
    $analyser,
    new \Mihaeu\PhpDependencies\DependencyStructureMatrixHtmlFormatter()
));

$application->add(new TextCommand(
    $phpFileFinder,
    $parser,
    $analyser
));

$application->run();
